version: 2
jobs:
  build:
    docker:
      - image: golang:1.6.4   # (1)
    working_directory: /go/src/github.com/circleci/Test101
    steps:
      - checkout
      # ... steps for building/testing app ...

      - setup_remote_docker   # (2)

      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose   

      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose up -d
            docker run --network container:test101_app_1 \
              appropriate/curl --retry 10 --retry-delay 5 --retry-connrefused http://localhost:8080

      # build and push Docker image
      - run: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            TAG=latest
          else
            TAG=0.1.$CIRCLE_BUILD_NUM
          fi
          docker build -t wesleycharlesblake/test101:$TAG .      # (3)
          docker login -u $DOCKER_USER -p $DOCKER_PASS         # (4)
          docker push wesleycharlesblake/test101:$TAG